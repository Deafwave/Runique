program RuniqueCannonballer;
{$i ../RuniqueInclude.simba}
var
ResetLimit,SteelBarbmp,MinutesToUseBankCommand,Trips:integer;
ItemSlotShop,SmithSlotNum:integer;
MinRuns:integer;
procedure freeimages;
begin
     freebitmap(SteelBarbmp);
end;

procedure main;forward;
procedure reset;
begin
  if ResetLimit > 2 then
  begin
  writeln('to many resets');
  terminatescript;
  end;
  inc(ResetLimit);
  SendCommand('::market');
  wait(3000);
      if RuniqueBagFull then
      begin
       main;
      end else
          begin
          findswbank;
          wait(500);
          main;
          end;
end;
procedure loadimages;
begin
		SteelBarbmp := BitmapFromString(11, 11, 'meJzLzy/Px0BdXVPh' +
        'CL8spgI0WSDy8wuBI0xZyhWkp+fjUQCUxWMCRB' +
        'aXArgs3JvICpBlgcjCwgaCICrRZBkZGACbJqe5');
        //clientbitmap:=  bitmapFromClient(704, 271,714, 281);   //totally not 2nd slot
end;

Procedure Proggy(runs:integer);
begin
  clearDebug;
  writeln('|---------------------------------------------------------|');
  writeln('||================Runique Cannonballer ===================|');
  writeln('           Time Running: '+ MsToTime(GetTimeRunning, 3),'||');
  writeln('           Roughly Cannon Balls Made ' + inttostr(runs * 104 + 4));
  writeln('||=======================================================||');
  writeln('|---------------------------------------------------------|');
End;

Procedure  MakeCannonBalls;
begin
if not RuniqueBagFull then
  begin
  OpenSummoningShop;
  buyitem(ItemSlotShop);
  end else
  begin
  SmithEdg(SteelBarbmp,SmithSlotNum);
  WaitBackPackChange(SteelBarbmp,10,100,500,0);
  inc(Trips);
  Proggy(Trips);
  BankingTimer(MinutesToUseBankCommand,MinRuns);
  end;
end;
procedure main;
begin
 repeat
  wait(500);
  MakeCannonBalls;
 until(false);
end;
begin
  SetupRuniqueinclude();
  addOnTerminate('freeimages');

  MinRuns:= 25;
  MinutesToUseBankCommand:= 9;
  ItemSlotShop:= 12;     //29    12
  SmithSlotNum:=  15;     //25   15
  loadimages;
  wait(600);
  main;
end;
